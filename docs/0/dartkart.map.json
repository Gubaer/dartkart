{"dependencies":[{"uri":"out/ReleaseIA32/dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"out/ReleaseIA32/dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"},{"comment":"\nThe library `dartkart.core` provides basic infrastructure classes.\n","uri":"file:///home/karl/repositories/dartkart/lib/src/core.dart","id":"dartkart.core","children":[{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA mixin class which provides the basic infrastructure for notifying\nclients about property changes.\n\n## Example\n    class Layer extends Object with PropertyObservable {\n       String _name;\n       set name(String value) {\n          var oldValue = _name;\n          _name = value;\n          // notify observers about property changes\n          notify(this, \"name\", oldValue, value);\n       }\n    }\n","uri":"file:///home/karl/repositories/dartkart/lib/src/core/events.dart","name":"PropertyObservable","id":"PropertyObservable","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nNotifies observers about an update of the property with\nname [property] in this object. [oldValue] was replaced\nby [newValue].\n\nObservers are only notified, provided [newValue] is different\nfrom [oldValue] and if there is at least one listener.\n\n","name":"notify","id":"notify3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"property","id":"property","kind":"param"},{"name":"oldValue","id":"oldValue","kind":"param"},{"name":"newValue","id":"newValue","kind":"param"}],"line":"80","kind":"method"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dartkart.core/PropertyChangeEvent","name":"PropertyChangeEvent"}],"name":"Stream"},"comment":"\nthe stream of property change events\n\n## Example\n\n     // an observable with a mixed in PropertyObservable\n     var observable = ...;\n     // listen for property change events for the property\n     // 'my_property'\n     observable.onPropertyChanged\n       .where((evt) => evt.name == \"my_property\")\n       .listen((evt) => print(\"new value: ${evt.newValue}\"));\n","name":"onPropertyChanged","id":"onPropertyChanged","line":"56","kind":"property"},{"ref":{"refId":"dart.async/StreamController","arguments":[{"refId":"dartkart.core/PropertyChangeEvent","name":"PropertyChangeEvent"}],"name":"StreamController"},"isFinal":true,"name":"_controller","isPrivate":true,"id":"_controller","line":"39","kind":"variable"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dartkart.core/PropertyChangeEvent","name":"PropertyChangeEvent"}],"name":"Stream"},"name":"_stream","isPrivate":true,"id":"_stream","line":"41","kind":"variable"}],"line":"38","kind":"class"}],"line":"4","kind":"library"}],"comment":"\nThe library `dartkart.map` provides an implementation of a map viewport\nand of a collection of map controls.\n","uri":"file:///home/karl/repositories/dartkart/lib/src/map.dart","id":"dartkart.map","children":[{"name":"_require","isPrivate":true,"id":"_require2()","children":[{"name":"cond","id":"cond","kind":"param"},{"isOptional":true,"defaultValue":"\"\"","name":"msg","id":"msg","kind":"param"}],"line":"24","kind":"method"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\n`MouseEventStream` transforms the bare bone DOM events into a stream\nof higher level [MouseEvents]. \n\nA `MouseEventStream` originates at an DOM [Element] \nwhich the stream is attached to.\n\n","uri":"file:///home/karl/repositories/dartkart/lib/src/map/mouse_events.dart","name":"MouseEventStream","id":"MouseEventStream","children":[{"name":"_fireDeferred","isPrivate":true,"id":"_fireDeferred0()","line":"77","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_rawMouseClick","isPrivate":true,"id":"_rawMouseClick1()","children":[{"ref":{"refId":"dart.dom.html/MouseEvent","name":"MouseEvent"},"name":"evt","id":"evt","kind":"param"}],"line":"85","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_rawMouseMove","isPrivate":true,"id":"_rawMouseMove1()","children":[{"ref":{"refId":"dart.dom.html/MouseEvent","name":"MouseEvent"},"name":"evt","id":"evt","kind":"param"}],"line":"102","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_rawMouseDown","isPrivate":true,"id":"_rawMouseDown1()","children":[{"ref":{"refId":"dart.dom.html/MouseEvent","name":"MouseEvent"},"name":"evt","id":"evt","kind":"param"}],"line":"116","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_rawMouseUp","isPrivate":true,"id":"_rawMouseUp1()","children":[{"ref":{"refId":"dart.dom.html/MouseEvent","name":"MouseEvent"},"name":"evt","id":"evt","kind":"param"}],"line":"125","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Detach from source and cancel all event subsriptions","name":"detach","id":"detach0()","line":"139","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Attach to [source] and process its raw mouse events.","name":"attach","id":"attach1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"source","id":"source","kind":"param"}],"line":"146","kind":"method"},{"name":"stream","id":"stream","line":"136","kind":"property"},{"name":"_controler","isPrivate":true,"id":"_controler","line":"59","kind":"variable"},{"name":"_subscriptions","isPrivate":true,"id":"_subscriptions","line":"60","kind":"variable"},{"name":"_lastMouseDownPos","isPrivate":true,"id":"_lastMouseDownPos","line":"62","kind":"variable"},{"name":"_lastMouseDownTimestamp","isPrivate":true,"id":"_lastMouseDownTimestamp","line":"63","kind":"variable"},{"name":"_mouseDown","isPrivate":true,"id":"_mouseDown","line":"64","kind":"variable"},{"name":"_isDragging","isPrivate":true,"id":"_isDragging","line":"65","kind":"variable"},{"name":"_deferredEvent","isPrivate":true,"id":"_deferredEvent","line":"75","kind":"variable"},{"comment":"Creates a new stream which isn't attached to any element","name":"MouseEventStream","id":"MouseEventStream0()","line":"68","kind":"constructor"},{"comment":"Creates a new stream which is attached to [source]. ","name":"MouseEventStream.from","id":"MouseEventStream.from1()","children":[{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"name":"source","id":"source","kind":"param"}],"line":"71","kind":"constructor"}],"line":"58","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nMouseEvent is an event triggered by mouse gestures. In contrast\nto the fundamental [html.MouseEvent] class it can represent \nthe mouse events in a drag operation. Instead of a bare bone\n'mouse move' event it can represent a 'mouse hover' or \na 'mouse drag' event.\n","uri":"file:///home/karl/repositories/dartkart/lib/src/map/mouse_events.dart","name":"MouseEvent","id":"MouseEvent","children":[{"name":"toString","id":"toString0()","line":"45","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_typeAsString","isPrivate":true,"id":"_typeAsString","line":"30","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"returns true if this mouse event is a drag event","name":"isDragEvent","id":"isDragEvent","line":"42","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CLICK","id":"CLICK","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"DOUBLE_CLICK","id":"DOUBLE_CLICK","line":"12","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"DRAG_START","id":"DRAG_START","line":"13","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"DRAG","id":"DRAG","line":"14","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"DRAG_END","id":"DRAG_END","line":"15","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"HOVER","id":"HOVER","line":"16","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"comment":"the type of the mouse event ","name":"type","id":"type","line":"19","kind":"variable"},{"ref":{"refId":"dart.dom.html/MouseEvent","name":"MouseEvent"},"isFinal":true,"comment":"the underlying DOM mouse event ","name":"event","id":"event","line":"22","kind":"variable"},{"comment":"\nCreate a mouse event of type [type] connected to the \nunderlying DOM mouse [event].\n","name":"MouseEvent","id":"MouseEvent2()","children":[{"initializedField":{"refId":"dartkart.map/MouseEvent/type","name":"type"},"ref":{"refId":"dart.core/int","name":"int"},"name":"type","id":"type","kind":"param"},{"initializedField":{"refId":"dartkart.map/MouseEvent/event","name":"event"},"ref":{"refId":"dart.dom.html/MouseEvent","name":"MouseEvent"},"name":"event","id":"event","kind":"param"}],"line":"28","kind":"constructor"}],"line":"10","kind":"class"},{"superclass":{"refId":"dartkart.map/MapControl","name":"MapControl"},"uri":"file:///home/karl/repositories/dartkart/lib/src/map/controls.dart","name":"LayerControl","id":"LayerControl","children":[{"returnType":{"refId":"void","name":"void"},"name":"detach","id":"detach0()","line":"615","kind":"method"},{"returnType":{"refId":"dart.dom.html/Element","name":"Element"},"name":"_buildLayerRow","isPrivate":true,"id":"_buildLayerRow1()","children":[{"ref":{"refId":"dartkart.layer/Layer","name":"Layer"},"name":"layer","id":"layer","kind":"param"}],"line":"623","kind":"method"},{"name":"_buildHtml","isPrivate":true,"id":"_buildHtml0()","line":"636","kind":"method"},{"name":"_wireEventListeners","isPrivate":true,"id":"_wireEventListeners0()","line":"650","kind":"method"},{"name":"_handleClick","isPrivate":true,"id":"_handleClick1()","children":[{"name":"evt","id":"evt","kind":"param"}],"line":"668","kind":"method"},{"name":"_layerTr","isPrivate":true,"id":"_layerTr1()","children":[{"name":"lid","id":"lid","kind":"param"}],"line":"675","kind":"method"},{"name":"_handleLayerEvent","isPrivate":true,"id":"_handleLayerEvent1()","children":[{"ref":{"refId":"dartkart.map/LayerEvent","name":"LayerEvent"},"name":"evt","id":"evt","kind":"param"}],"line":"679","kind":"method"},{"name":"_cbSetChecked","isPrivate":true,"id":"_cbSetChecked2()","children":[{"name":"cb","id":"cb","kind":"param"},{"name":"value","id":"value","kind":"param"}],"line":"711","kind":"method"},{"name":"_handleLayerPropertyChange","isPrivate":true,"id":"_handleLayerPropertyChange1()","children":[{"name":"evt","id":"evt","kind":"param"}],"line":"719","kind":"method"},{"name":"_toggleLayerVisibility","isPrivate":true,"id":"_toggleLayerVisibility1()","children":[{"name":"evt","id":"evt","kind":"param"}],"line":"738","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"build","id":"build0()","line":"758","kind":"method"},{"name":"defaultPosition","id":"defaultPosition","line":"766","kind":"property"},{"isStatic":true,"name":"_TEMPLATE","isPrivate":true,"id":"_TEMPLATE","line":"596","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/int","name":"int"},{"refId":"dart.async/StreamSubscription","name":"StreamSubscription"}],"name":"Map"},"isFinal":true,"name":"_layerSubscriptions","isPrivate":true,"id":"_layerSubscriptions","line":"605","kind":"variable"},{"isStatic":true,"name":"_ROW_TEMPLATE","isPrivate":true,"id":"_ROW_TEMPLATE","line":"608","kind":"variable"},{"name":"_defaultPosition","isPrivate":true,"id":"_defaultPosition","line":"764","kind":"variable"},{"name":"LayerControl","id":"LayerControl1()","children":[{"ref":{"refId":"dartkart.map/MapViewport","name":"MapViewport"},"isOptional":true,"name":"map","id":"map","kind":"param"}],"line":"603","kind":"constructor"}],"line":"595","kind":"class"},{"superclass":{"refId":"dartkart.map/MapControl","name":"MapControl"},"comment":"\nThis is a simple zoom control element. It displays two\nbuttons [:+:] and [:-:] to increase and decrease the\ncurrent zoom level respectively\n","uri":"file:///home/karl/repositories/dartkart/lib/src/map/controls.dart","name":"SimpleZoomControl","id":"SimpleZoomControl","children":[{"name":"_zoomIn","isPrivate":true,"id":"_zoomIn1()","children":[{"name":"evt","id":"evt","kind":"param"}],"line":"523","kind":"method"},{"name":"_zoomOut","isPrivate":true,"id":"_zoomOut1()","children":[{"name":"evt","id":"evt","kind":"param"}],"line":"524","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"build","id":"build0()","line":"526","kind":"method"},{"name":"_buildSvg","isPrivate":true,"id":"_buildSvg0()","line":"532","kind":"method"},{"name":"_wireEventHandlers","isPrivate":true,"id":"_wireEventHandlers0()","line":"570","kind":"method"},{"name":"defaultPosition","id":"defaultPosition","line":"591","kind":"property"},{"isStatic":true,"name":"SVG_CONTENT","id":"SVG_CONTENT","line":"510","kind":"variable"},{"isStatic":true,"name":"_DEFAULT_POS","isPrivate":true,"id":"_DEFAULT_POS","line":"589","kind":"variable"},{"name":"SimpleZoomControl","id":"SimpleZoomControl1()","children":[{"ref":{"refId":"dartkart.map/MapViewport","name":"MapViewport"},"isOptional":true,"name":"map","id":"map","kind":"param"}],"line":"521","kind":"constructor"}],"line":"508","kind":"class"},{"superclass":{"refId":"dartkart.map/MapControl","name":"MapControl"},"comment":"\nA control element for controling the zoom level.\n","uri":"file:///home/karl/repositories/dartkart/lib/src/map/controls.dart","name":"ZoomControl","id":"ZoomControl","children":[{"name":"_zoomIn","isPrivate":true,"id":"_zoomIn1()","children":[{"name":"evt","id":"evt","kind":"param"}],"line":"383","kind":"method"},{"name":"_zoomOut","isPrivate":true,"id":"_zoomOut1()","children":[{"name":"evt","id":"evt","kind":"param"}],"line":"384","kind":"method"},{"name":"_onZoomLevelClick","isPrivate":true,"id":"_onZoomLevelClick1()","children":[{"name":"evt","id":"evt","kind":"param"}],"line":"386","kind":"method"},{"name":"_onZoomChanged","isPrivate":true,"id":"_onZoomChanged1()","children":[{"name":"evt","id":"evt","kind":"param"}],"line":"396","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"build","id":"build0()","line":"403","kind":"method"},{"name":"_buildSvg","isPrivate":true,"id":"_buildSvg0()","line":"409","kind":"method"},{"name":"_wireEventHandlers","isPrivate":true,"id":"_wireEventHandlers0()","line":"462","kind":"method"},{"name":"defaultPosition","id":"defaultPosition","line":"499","kind":"property"},{"isStatic":true,"name":"SVG_CONTENT","id":"SVG_CONTENT","line":"370","kind":"variable"},{"isStatic":true,"name":"_DEFAULT_POS","isPrivate":true,"id":"_DEFAULT_POS","line":"497","kind":"variable"},{"name":"ZoomControl","id":"ZoomControl1()","children":[{"ref":{"refId":"dartkart.map/MapViewport","name":"MapViewport"},"isOptional":true,"name":"map","id":"map","kind":"param"}],"line":"381","kind":"constructor"}],"line":"368","kind":"class"},{"superclass":{"refId":"dartkart.map/MapControl","name":"MapControl"},"comment":"\nA scale indicator control displays information about the current\nmap scale.\n\n","uri":"file:///home/karl/repositories/dartkart/lib/src/map/controls.dart","name":"ScaleIndicatorControl","id":"ScaleIndicatorControl","children":[{"returnType":{"refId":"void","name":"void"},"name":"build","id":"build0()","line":"282","kind":"method"},{"name":"_100PixelDistance","isPrivate":true,"id":"_100PixelDistance0()","line":"304","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"_formatMeterDistance","isPrivate":true,"id":"_formatMeterDistance1()","children":[{"name":"m","id":"m","kind":"param"}],"line":"311","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"_formatMilesDistance","isPrivate":true,"id":"_formatMilesDistance1()","children":[{"name":"ft","id":"ft","kind":"param"}],"line":"325","kind":"method"},{"name":"_refresh","isPrivate":true,"id":"_refresh0()","line":"338","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"layout","id":"layout0()","line":"359","kind":"method"},{"name":"defaultPosition","id":"defaultPosition","line":"346","kind":"property"},{"isStatic":true,"name":"SVG_CONTENT","id":"SVG_CONTENT","line":"258","kind":"variable"},{"name":"ScaleIndicatorControl","id":"ScaleIndicatorControl1()","children":[{"ref":{"refId":"dartkart.map/MapViewport","name":"MapViewport"},"isOptional":true,"name":"map","id":"map","line":"280","kind":"param"}],"line":"279","kind":"constructor"}],"line":"256","kind":"class"},{"superclass":{"refId":"dartkart.map/MapControl","name":"MapControl"},"comment":"\nAn instance of PanControl represents a map control to pan the\nmap viewport ~100 pixels north, east, west, or south.\n\n## Example\n\n     var map = new MapViewport(\"#container\");\n     // this creates the control and adds it to the\n     // map's controls pane, and registers\n     var panControl = new PanControl();\n     panControl.attachTo(map);\n\n     // to detach the control from the map\n     panControl.detachFrom(map);\n\n","uri":"file:///home/karl/repositories/dartkart/lib/src/map/controls.dart","name":"PanControl","id":"PanControl","children":[{"name":"_wireEventHandlers","isPrivate":true,"id":"_wireEventHandlers0()","line":"208","kind":"method"},{"name":"_buildSvg","isPrivate":true,"id":"_buildSvg0()","line":"225","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"build","id":"build0()","line":"237","kind":"method"},{"name":"defaultPosition","id":"defaultPosition","line":"243","kind":"property"},{"isStatic":true,"name":"_DEFAULT_POS","isPrivate":true,"id":"_DEFAULT_POS","line":"181","kind":"variable"},{"isStatic":true,"name":"SVG_CONTENT","id":"SVG_CONTENT","line":"183","kind":"variable"},{"name":"PanControl","id":"PanControl1()","children":[{"ref":{"refId":"dartkart.map/MapViewport","name":"MapViewport"},"isOptional":true,"name":"viewport","id":"viewport","kind":"param"}],"line":"246","kind":"constructor"}],"line":"180","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThe abstract base class for map controls.\n","uri":"file:///home/karl/repositories/dartkart/lib/src/map/controls.dart","name":"MapControl","id":"MapControl","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nDetaches this control from the map viewport it is currently\nattached to (if any).\n","name":"detach","id":"detach0()","line":"79","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAttaches this control to the map [viewport].\n","name":"attach","id":"attach1()","children":[{"ref":{"refId":"dartkart.map/MapViewport","name":"MapViewport"},"name":"viewport","id":"viewport","kind":"param"}],"line":"91","kind":"method"},{"name":"_normalizePropertyValue","isPrivate":true,"id":"_normalizePropertyValue1()","children":[{"name":"v","id":"v","kind":"param"}],"line":"111","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nApplies the current position to the appropriate DOM element.\n","name":"applyPosition","id":"applyPosition0()","line":"131","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nPlaces the control at the position ([x], [y]).\n","name":"placeAt","id":"placeAt2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"x","id":"x","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"y","id":"y","kind":"param"}],"line":"146","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAbstract method which builds the DOM tree for the control.\nOverride in subclasses.\n","name":"build","id":"build0()","line":"155","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInvoke this to force to (re-)layout the map control in the current\nmap viewport.\n","name":"layout","id":"layout0()","line":"161","kind":"method"},{"ref":{"refId":"dartkart.map/MapViewport","name":"MapViewport"},"comment":"the map this control is attached to, or null","name":"map","id":"map","line":"52","kind":"property"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"the root DOM element for this map control","name":"root","id":"root","line":"61","kind":"property"},{"ref":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"comment":"\nthe default position of the control if no position has been\nset explicitly using [placeAt].\n\nOverride in subclasses.\n","name":"defaultPosition","id":"defaultPosition","line":"124","kind":"property"},{"ref":{"refId":"dartkart.map/MapViewport","name":"MapViewport"},"name":"_map","isPrivate":true,"id":"_map","line":"50","kind":"variable"},{"ref":{"refId":"dart.core/List","name":"List"},"isFinal":true,"comment":"the list of currently subscriptions","name":"_subscriptions","isPrivate":true,"id":"_subscriptions","line":"55","kind":"variable"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"the container element for the control","name":"_root","isPrivate":true,"id":"_root","line":"58","kind":"variable"},{"ref":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"name":"_position","isPrivate":true,"id":"_position","line":"126","kind":"variable"},{"comment":"\nCreates a new map control attached to [viewport].\n\nIf [viewport] is missing, the control isn't attached yet.\nUse [attach] to attach it.\n","name":"MapControl","id":"MapControl1()","children":[{"ref":{"refId":"dartkart.map/MapViewport","name":"MapViewport"},"isOptional":true,"name":"viewport","id":"viewport","kind":"param"}],"line":"69","kind":"constructor"}],"line":"49","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThe container class for [MapControl]s. There's exactly one [ControlsPane] in\na [MapViewport].\n","uri":"file:///home/karl/repositories/dartkart/lib/src/map/controls.dart","name":"ControlsPane","id":"ControlsPane","children":[{"returnType":{"refId":"void","name":"void"},"comment":"Detach this pane from the map viewport.","name":"detach","id":"detach0()","line":"21","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Attach this control pane to the [viewport]. [viewport]\nmust not be null.","name":"attach","id":"attach1()","children":[{"ref":{"refId":"dartkart.map/MapViewport","name":"MapViewport"},"name":"viewport","id":"viewport","kind":"param"}],"line":"27","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"layout the contronls pane","name":"layout","id":"layout0()","line":"41","kind":"method"},{"ref":{"refId":"dart.dom.html/DivElement","name":"DivElement"},"comment":"the root DOM element for this control","name":"root","id":"root","line":"18","kind":"property"},{"ref":{"refId":"dartkart.map/MapViewport","name":"MapViewport"},"name":"_viewport","isPrivate":true,"id":"_viewport","line":"8","kind":"variable"},{"ref":{"refId":"dart.dom.html/DivElement","name":"DivElement"},"name":"_root","isPrivate":true,"id":"_root","line":"9","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dartkart.map/MapControl","name":"MapControl"}],"name":"List"},"isFinal":true,"name":"controls","id":"controls","line":"11","kind":"variable"},{"name":"ControlsPane","id":"ControlsPane0()","line":"13","kind":"constructor"}],"line":"7","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\n`PanBehaviour` controls animated panning of a map viewport.\n","uri":"file:///home/karl/repositories/dartkart/lib/src/map/map_viewport.dart","name":"PanBehaviour","id":"PanBehaviour","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nAnimate the panning of the map viewport by a vector given\nby [panBy].\n","name":"animate","id":"animate1()","children":[{"ref":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"name":"panBy","id":"panBy","kind":"param"}],"line":"541","kind":"method"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"ACCELERATION","id":"ACCELERATION","line":"527","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"SPEED","id":"SPEED","line":"528","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"DELTA_T","id":"DELTA_T","line":"529","kind":"variable"},{"ref":{"refId":"dartkart.map/MapViewport","name":"MapViewport"},"isFinal":true,"comment":"the map viewport controlled by this behaviour","name":"viewport","id":"viewport","line":"532","kind":"variable"},{"comment":"Creates a new behaviour controlling [viewport].","name":"PanBehaviour","id":"PanBehaviour1()","children":[{"initializedField":{"refId":"dartkart.map/PanBehaviour/viewport","name":"viewport"},"ref":{"refId":"dartkart.map/MapViewport","name":"MapViewport"},"name":"viewport","id":"viewport","kind":"param"}],"line":"535","kind":"constructor"}],"line":"526","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/karl/repositories/dartkart/lib/src/map/map_viewport.dart","name":"_DragController","isPrivate":true,"id":"_DragController","children":[{"name":"_onDragStart","isPrivate":true,"id":"_onDragStart1()","children":[{"name":"evt","id":"evt","kind":"param"}],"line":"492","kind":"method"},{"name":"_onDragEnd","isPrivate":true,"id":"_onDragEnd1()","children":[{"name":"evt","id":"evt","kind":"param"}],"line":"499","kind":"method"},{"name":"_onDrag","isPrivate":true,"id":"_onDrag1()","children":[{"name":"evt","id":"evt","kind":"param"}],"line":"504","kind":"method"},{"isFinal":true,"name":"map","id":"map","line":"476","kind":"variable"},{"ref":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"name":"_dragStart","isPrivate":true,"id":"_dragStart","line":"477","kind":"variable"},{"ref":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"name":"_dragLast","isPrivate":true,"id":"_dragLast","line":"478","kind":"variable"},{"ref":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"name":"_centerOnZoomPlane","isPrivate":true,"id":"_centerOnZoomPlane","line":"479","kind":"variable"},{"name":"_DragController","id":"_DragController1()","children":[{"initializedField":{"refId":"dartkart.map/_DragController/map","name":"map"},"name":"map","id":"map","kind":"param"}],"line":"481","kind":"constructor"}],"line":"475","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/karl/repositories/dartkart/lib/src/map/map_viewport.dart","name":"_DoubleClickController","isPrivate":true,"id":"_DoubleClickController","children":[{"name":"_onDoubleClick","isPrivate":true,"id":"_onDoubleClick1()","children":[{"name":"evt","id":"evt","kind":"param"}],"line":"472","kind":"method"},{"isFinal":true,"name":"map","id":"map","line":"466","kind":"variable"},{"name":"_DoubleClickController","id":"_DoubleClickController1()","children":[{"initializedField":{"refId":"dartkart.map/_DoubleClickController/map","name":"map"},"name":"map","id":"map","kind":"param"}],"line":"467","kind":"constructor"}],"line":"465","kind":"class"},{"superclass":{"refId":"dartkart.map/Object_PropertyObservable","name":"Object_PropertyObservable"},"comment":"\nA MapViewport provides a view on a rectangular area of a map\nplane in a stack of map planes on different zoom levels.\n\nIt also provides the functionality to change between map\nplanes (zoom in and zoom out) and to move the viewport\naround on the current map plane (pan left, rigth, up, or down). \n\nA MapViewport manages a stack of map [Layer]s. \n\nA MapViewport is a [PropertyObservable]. It emits propery change\nevents for\n* [: zoom :]  - emitted if the zoom level is changed\n* [: center :]  - emitted if the center of the map viewport is changed\n","uri":"file:///home/karl/repositories/dartkart/lib/src/map/map_viewport.dart","name":"MapViewport","id":"MapViewport","children":[{"returnType":{"refId":"void","name":"void"},"name":"attachEventListeners","id":"attachEventListeners0()","line":"77","kind":"method"},{"returnType":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"comment":"Transforms projected coordinates [p] to coordinates in the current map\nzoom plane","name":"mapToZoomPlane","id":"mapToZoomPlane1()","children":[{"ref":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"name":"p","id":"p","kind":"param"}],"line":"86","kind":"method"},{"returnType":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"comment":"Transforms coordinates [p] in the current map zoom plane to\nprojected coordinates","name":"zoomPlaneToMap","id":"zoomPlaneToMap1()","children":[{"ref":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"name":"p","id":"p","kind":"param"}],"line":"98","kind":"method"},{"returnType":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"comment":"Transforms coordinates in the current map zoom plane to viewport\ncoordinates","name":"zoomPlaneToViewport","id":"zoomPlaneToViewport1()","children":[{"ref":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"name":"p","id":"p","kind":"param"}],"line":"109","kind":"method"},{"returnType":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"comment":"viewport coordinates to coordinates in the current map zoom plane","name":"viewportToZoomPlane","id":"viewportToZoomPlane1()","children":[{"ref":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"name":"p","id":"p","kind":"param"}],"line":"115","kind":"method"},{"returnType":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"comment":"Transforms geographic coordinates [ll] to projected coordinates","name":"earthToMap","id":"earthToMap1()","children":[{"ref":{"refId":"dartkart.geo/LatLon","name":"LatLon"},"name":"ll","id":"ll","kind":"param"}],"line":"122","kind":"method"},{"returnType":{"refId":"dartkart.geo/LatLon","name":"LatLon"},"comment":"Transforms projected coordinates [p] to geographic coordinates","name":"mapToEarth","id":"mapToEarth1()","children":[{"ref":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"name":"p","id":"p","kind":"param"}],"line":"125","kind":"method"},{"returnType":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"comment":"\nTransforms page coordinates to viewport coordinates.\n\n[v] is either\n  * a [Point2D]\n  * a [MouseEvent] - uses the coordinates (pageX, pageY)\n\n The result are viewport coordinates for the map viewport where\n   * (0,0) is the upper left corner of the map viewport\n   * x runs to the right\n   * y runs down\n","name":"pageToViewport","id":"pageToViewport1()","children":[{"name":"v","id":"v","kind":"param"}],"line":"183","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRenders the map.\n","name":"render","id":"render0()","line":"194","kind":"method"},{"comment":"update the z-indexes of the layer. Reflects the ordering in\nthe layer stack. The layer with the highest index is renderer\non top, the layer with index 0 is rendered at the bottom.","name":"_updateLayerZIndex","isPrivate":true,"id":"_updateLayerZIndex0()","line":"205","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a [layer] to the map.\n\n[layer] is appended to the list of layers of this map. It therefore\nhas the highest layer index and becomes rendered on top of the layer\nstack of this map.\n\nThrows [ArgumentError] if [layer] is null. [layer] is ignored if it\nis already attached to this map.\n\n##Example\n   var source= \"http://a.tile.openstreetmap.org/{z}/{x}/{y}.png\";\n   map.addLayer(new OsmLayer(tileSource: source));\n","name":"addLayer","id":"addLayer1()","children":[{"ref":{"refId":"dartkart.layer/Layer","name":"Layer"},"name":"layer","id":"layer","kind":"param"}],"line":"226","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves [layer] from the stack of layers of this map.\n\nIgnores [layer] if it is null or if it isn't attached to this map.\n","name":"removeLayer","id":"removeLayer1()","children":[{"ref":{"refId":"dartkart.layer/Layer","name":"Layer"},"name":"layer","id":"layer","kind":"param"}],"line":"242","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"true, if [layer] is part of the layer stack of this map","name":"hasLayer","id":"hasLayer1()","children":[{"ref":{"refId":"dartkart.layer/Layer","name":"Layer"},"name":"layer","id":"layer","kind":"param"}],"line":"254","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nMoves the [layer] to the top.\n","name":"moveToTop","id":"moveToTop1()","children":[{"ref":{"refId":"dartkart.layer/Layer","name":"Layer"},"name":"layer","id":"layer","kind":"param"}],"line":"263","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nMoves the [layer] to the bottom.\n","name":"moveToBottom","id":"moveToBottom1()","children":[{"ref":{"refId":"dartkart.layer/Layer","name":"Layer"},"name":"layer","id":"layer","kind":"param"}],"line":"274","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nMoves the [layer] to the position [index] in the\nlayer stack.\n","name":"moveTo","id":"moveTo2()","children":[{"ref":{"refId":"dartkart.layer/Layer","name":"Layer"},"name":"layer","id":"layer","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"287","kind":"method"},{"name":"_notifyLayerEvent","isPrivate":true,"id":"_notifyLayerEvent2()","children":[{"name":"layer","id":"layer","kind":"param"},{"name":"type","id":"type","kind":"param"}],"line":"302","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSet the zoom level [zoom].\n\n[zoom] >= 0 expected, otherwise throws an [ArgumentError].\n","name":"zoom=","id":"zoom=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"value","id":"value","kind":"param"}],"line":"338","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nZoom in by [delta] zoom levels.\n\nThrows [ArgumentError] if [delta] < 0. Fires a zoom change event.\n","name":"zoomIn","id":"zoomIn1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"1","name":"delta","id":"delta","kind":"param"}],"line":"351","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nZoom out by [delta] zoom levels.\n\nThrows [ArgumentError] if [delta] < 0. Fires a zoom change event.\n","name":"zoomOut","id":"zoomOut1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"1","name":"delta","id":"delta","kind":"param"}],"line":"367","kind":"method"},{"name":"_onMouseWheel","isPrivate":true,"id":"_onMouseWheel1()","children":[{"ref":{"refId":"dart.dom.html/WheelEvent","name":"WheelEvent"},"name":"evt","id":"evt","kind":"param"}],"line":"377","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the current map [center].\n\n[center] must not be null. Broadcasts a [PropertyChangeEvent] if\nthe center is changed, see [onCenterChanged].\n","name":"center=","id":"center=1()","children":[{"ref":{"refId":"dartkart.geo/LatLon","name":"LatLon"},"name":"value","id":"value","kind":"param"}],"line":"394","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"pan","id":"pan2()","children":[{"name":"delta","id":"delta","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"animate","id":"animate","kind":"param"}],"line":"404","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Pans the viewport num [pixels] to the north.\nAnimates panning if [animate] is true.","name":"panNorth","id":"panNorth2()","children":[{"isNamed":true,"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"100","name":"pixels","id":"pixels","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"animate","id":"animate","kind":"param"}],"line":"422","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Pans the viewport num [pixels] to the south.\nAnimates panning if [animate] is true.","name":"panSouth","id":"panSouth2()","children":[{"isNamed":true,"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"100","name":"pixels","id":"pixels","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"animate","id":"animate","kind":"param"}],"line":"427","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Pans the viewport num [pixels] to the west\nAnimates panning if [animate] is true.","name":"panWest","id":"panWest2()","children":[{"isNamed":true,"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"100","name":"pixels","id":"pixels","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"animate","id":"animate","kind":"param"}],"line":"432","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Pans the viewport num [pixels] to the east\nAnimates panning if [animate] is true.","name":"panEast","id":"panEast2()","children":[{"isNamed":true,"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"100","name":"pixels","id":"pixels","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"animate","id":"animate","kind":"param"}],"line":"437","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"sets the [pane] for the interactive map controls","name":"controlsPane=","id":"controlsPane=1()","children":[{"ref":{"refId":"dartkart.map/ControlsPane","name":"ControlsPane"},"name":"pane","id":"pane","kind":"param"}],"line":"447","kind":"method"},{"ref":{"refId":"dart.dom.html/Element","name":"Element"},"comment":"the root DOM element of the map viewport","name":"root","id":"root","line":"45","kind":"property"},{"ref":{"refId":"dartkart.geo/ProjectedCRS","name":"ProjectedCRS"},"name":"crs","id":"crs","line":"49","kind":"property"},{"ref":{"refId":"dartkart.geometry/Dimension","name":"Dimension"},"comment":"the viewport size","name":"viewportSize","id":"viewportSize","line":"128","kind":"property"},{"ref":{"refId":"dartkart.geometry/Dimension","name":"Dimension"},"comment":"the size of the current map zoom plane","name":"zoomPlaneSize","id":"zoomPlaneSize","line":"132","kind":"property"},{"ref":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"comment":"the top-left point in \"page coordinates\"","name":"topLeftInPage","id":"topLeftInPage","line":"138","kind":"property"},{"ref":{"refId":"dartkart.geometry/Bounds","name":"Bounds"},"comment":"\nThe bounding box of the viewport in which we are currently rending\npart of the map.\n\nThe screen bounding box depends on the current zoom level ant the\ncurrent map center. In most cases, in partiuclar on zoom levels > 2,\nit is equal to the extend of the map viewport. In lower zoom levels,\nwhere the zoom plane is smaller than the map viewport, or if the\ncenter is moved very far east, west, north, or south, it only covers\npart of the viewport.\n\n","name":"screenBoundingBox","id":"screenBoundingBox","line":"158","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dartkart.layer/Layer","name":"Layer"}],"name":"List"},"comment":"an unmodifiable list of layers of this map. Empty, if\nno layes are defined.","name":"layers","id":"layers","line":"258","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dartkart.map/LayerEvent","name":"LayerEvent"}],"name":"Stream"},"comment":"\nStream of layer change events.\n\n## Example\n\n    map.onLayersChanged\n      .where((LayerEvent e) => e.type == LayerEvent.ADDED))\n      .listen((LayerEvent e) {\n          print(\"layer added - num layers: ${map.layers.length}\");\n      });\n","name":"onLayersChanged","id":"onLayersChanged","line":"320","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"the current zoom level","name":"zoom","id":"zoom","line":"331","kind":"property"},{"ref":{"refId":"dartkart.geo/LatLon","name":"LatLon"},"comment":"the current map center in geographic coordinates","name":"center","id":"center","line":"386","kind":"property"},{"ref":{"refId":"dartkart.map/ControlsPane","name":"ControlsPane"},"comment":"the pane with the interactive map controls","name":"controlsPane","id":"controlsPane","line":"444","kind":"property"},{"ref":{"refId":"dart.dom.html/DivElement","name":"DivElement"},"name":"_root","isPrivate":true,"id":"_root","line":"42","kind":"variable"},{"ref":{"refId":"dartkart.geo/ProjectedCRS","name":"ProjectedCRS"},"isFinal":true,"name":"_crs","isPrivate":true,"id":"_crs","line":"48","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dartkart.layer/Layer","name":"Layer"}],"name":"List"},"isFinal":true,"name":"_layers","isPrivate":true,"id":"_layers","line":"200","kind":"variable"},{"ref":{"refId":"dart.async/StreamController","arguments":[{"refId":"dartkart.map/LayerEvent","name":"LayerEvent"}],"name":"StreamController"},"isFinal":true,"name":"_layerEventsController","isPrivate":true,"id":"_layerEventsController","line":"298","kind":"variable"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dartkart.map/LayerEvent","name":"LayerEvent"}],"name":"Stream"},"name":"_layerEventsStream","isPrivate":true,"id":"_layerEventsStream","line":"300","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_zoom","isPrivate":true,"id":"_zoom","line":"328","kind":"variable"},{"ref":{"refId":"dartkart.geo/LatLon","name":"LatLon"},"name":"_center","isPrivate":true,"id":"_center","line":"383","kind":"variable"},{"ref":{"refId":"dartkart.map/ControlsPane","name":"ControlsPane"},"name":"_controlsPane","isPrivate":true,"id":"_controlsPane","line":"441","kind":"variable"},{"comment":"\nCreates a map viewport.\n\n[container] is either an [Element] or a string consisting of\na CSS selector.\n","name":"MapViewport","id":"MapViewport1()","children":[{"name":"container","id":"container","kind":"param"}],"line":"57","kind":"constructor"}],"line":"40","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA layer event emitted by a [MapViewport]\n","uri":"file:///home/karl/repositories/dartkart/lib/src/map/map_viewport.dart","name":"LayerEvent","id":"LayerEvent","children":[{"isStatic":true,"comment":"layer has been added","name":"ADDED","id":"ADDED","line":"8","kind":"variable"},{"isStatic":true,"comment":"layer has been removed","name":"REMOVED","id":"REMOVED","line":"10","kind":"variable"},{"isStatic":true,"comment":"layer has been moved","name":"MOVED","id":"MOVED","line":"12","kind":"variable"},{"ref":{"refId":"dartkart.map/MapViewport","name":"MapViewport"},"isFinal":true,"comment":"the map viewport emitting the event","name":"map","id":"map","line":"15","kind":"variable"},{"ref":{"refId":"dartkart.layer/Layer","name":"Layer"},"isFinal":true,"comment":"the layer","name":"layer","id":"layer","line":"17","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"comment":"the type of event (either [ADDED], [REMOVED], or [MOVED])","name":"type","id":"type","line":"19","kind":"variable"},{"comment":"Creates an event of type [type] emitted by [map] for [layer]","name":"LayerEvent","id":"LayerEvent3()","children":[{"initializedField":{"refId":"dartkart.map/LayerEvent/map","name":"map"},"ref":{"refId":"dartkart.map/MapViewport","name":"MapViewport"},"name":"map","id":"map","kind":"param"},{"initializedField":{"refId":"dartkart.map/LayerEvent/layer","name":"layer"},"ref":{"refId":"dartkart.layer/Layer","name":"Layer"},"name":"layer","id":"layer","kind":"param"},{"initializedField":{"refId":"dartkart.map/LayerEvent/type","name":"type"},"ref":{"refId":"dart.core/int","name":"int"},"name":"type","id":"type","kind":"param"}],"line":"22","kind":"constructor"}],"line":"6","kind":"class"}],"line":"5","kind":"library"}