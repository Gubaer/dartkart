{"dependencies":[{"uri":"out/ReleaseIA32/dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"out/ReleaseIA32/dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"},{"comment":"\nThe library `dartkart.core` provides basic infrastructure classes.\n","uri":"file:///home/karl/repositories/dartkart/lib/src/core.dart","id":"dartkart.core","children":[{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA mixin class which provides the basic infrastructure for notifying\nclients about property changes.\n\n## Example\n    class Layer extends Object with PropertyObservable {\n       String _name;\n       set name(String value) {\n          var oldValue = _name;\n          _name = value;\n          // notify observers about property changes\n          notify(this, \"name\", oldValue, value);\n       }\n    }\n","uri":"file:///home/karl/repositories/dartkart/lib/src/core/events.dart","name":"PropertyObservable","id":"PropertyObservable","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nNotifies observers about an update of the property with\nname [property] in this object. [oldValue] was replaced\nby [newValue].\n\nObservers are only notified, provided [newValue] is different\nfrom [oldValue] and if there is at least one listener.\n\n","name":"notify","id":"notify3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"property","id":"property","kind":"param"},{"name":"oldValue","id":"oldValue","kind":"param"},{"name":"newValue","id":"newValue","kind":"param"}],"line":"80","kind":"method"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dartkart.core/PropertyChangeEvent","name":"PropertyChangeEvent"}],"name":"Stream"},"comment":"\nthe stream of property change events\n\n## Example\n\n     // an observable with a mixed in PropertyObservable\n     var observable = ...;\n     // listen for property change events for the property\n     // 'my_property'\n     observable.onPropertyChanged\n       .where((evt) => evt.name == \"my_property\")\n       .listen((evt) => print(\"new value: ${evt.newValue}\"));\n","name":"onPropertyChanged","id":"onPropertyChanged","line":"56","kind":"property"},{"ref":{"refId":"dart.async/StreamController","arguments":[{"refId":"dartkart.core/PropertyChangeEvent","name":"PropertyChangeEvent"}],"name":"StreamController"},"isFinal":true,"name":"_controller","isPrivate":true,"id":"_controller","line":"39","kind":"variable"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dartkart.core/PropertyChangeEvent","name":"PropertyChangeEvent"}],"name":"Stream"},"name":"_stream","isPrivate":true,"id":"_stream","line":"41","kind":"variable"}],"line":"38","kind":"class"}],"line":"4","kind":"library"}],"comment":"\nThe library `dartkart.layer` provides various types of layers which\ncan be added to a [MapViewport].\n\n","uri":"file:///home/karl/repositories/dartkart/lib/src/layer.dart","id":"dartkart.layer","children":[{"name":"_require","isPrivate":true,"id":"_require2()","children":[{"name":"cond","id":"cond","kind":"param"},{"isOptional":true,"defaultValue":"\"\"","name":"msg","id":"msg","kind":"param"}],"line":"25","kind":"method"},{"isFinal":true,"comment":"the default internal tile cache","uri":"file:///home/karl/repositories/dartkart/lib/src/layer/tile_layer.dart","name":"_DEFAULT_CACHE","isPrivate":true,"id":"_DEFAULT_CACHE","line":"818","kind":"variable"},{"comment":"\nRenderer constant for [CanvasRenderer]. Use it when creating a tile\nlayer.\n\n### Example\n      var layer = new OsmTileLayer(renderer: CANVAS_RENDERER);\n","uri":"file:///home/karl/repositories/dartkart/lib/src/layer/tile_layer.dart","name":"CANVAS_RENDERER","id":"CANVAS_RENDERER","line":"359","kind":"variable"},{"comment":"\nRenderer constant for [ImgGridRenderer]. Use it when creating a tile\nlayer.\n\n### Example\n       var layer = new OsmTileLayer(renderer: IMG_GRID_RENDERER);\n","uri":"file:///home/karl/repositories/dartkart/lib/src/layer/tile_layer.dart","name":"IMG_GRID_RENDERER","id":"IMG_GRID_RENDERER","line":"350","kind":"variable"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn instance of this class maintains a cache of [ImageElement]s for\nalready downloaded map tiles.\n\nThe size of the cache is bound. The least recently accessed map tile\nis removed from the cache first, if the upper limit of the maps size\nis reached.\n","uri":"file:///home/karl/repositories/dartkart/lib/src/layer/tile_layer.dart","name":"TileCache","id":"TileCache","children":[{"returnType":{"refId":"dart.dom.html/ImageElement","name":"ImageElement"},"comment":"\n Lookup (or create) an [ImageElement] for [url].\n\n If the image isn't in the cache then [onLoad] and [onError]\n are invoked later when the image is successfully loaded or\n when an error occurs respectively.\n","name":"lookup","id":"lookup3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onLoad","id":"onLoad","children":[{"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"file:///home/karl/repositories/dartkart/lib/src/layer/tile_layer.dart","name":"event","id":"event","line":"737","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onError","id":"onError","children":[{"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"file:///home/karl/repositories/dartkart/lib/src/layer/tile_layer.dart","name":"event","id":"event","line":"737","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"737","kind":"method"},{"returnType":{"refId":"dart.dom.html/ImageElement","name":"ImageElement"},"comment":"\nReplies the tile image for [url] if it is already in the cache\nand complete. Otherwise, returns null.\n","name":"get","id":"get1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"url","id":"url","kind":"param"}],"line":"777","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nPurges [obj] from the cache.\n\n## Possible values for [obj]\n\n* an URL as [String]\n* an [ImageElement]\n\nOtherwise throws an [ArgumentError].\n\nNothing is purged from the cache if [obj] is null.\n","name":"purge","id":"purge1()","children":[{"name":"obj","id":"obj","kind":"param"}],"line":"800","kind":"method"},{"isStatic":true,"comment":"default tile cache size","name":"DEFAULT_CAPACITY","id":"DEFAULT_CAPACITY","line":"717","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.dom.html/ImageElement","name":"ImageElement"}],"name":"Map"},"isFinal":true,"name":"_map","isPrivate":true,"id":"_map","line":"719","kind":"variable"},{"ref":{"refId":"dart.collection/Queue","arguments":[{"refId":"dart.dom.html/ImageElement","name":"ImageElement"}],"name":"Queue"},"isFinal":true,"name":"_access","isPrivate":true,"id":"_access","line":"720","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"capacity","id":"capacity","line":"722","kind":"variable"},{"comment":"\nCreates the tile cache with [capacity] as upper\ncapacity limit.\n","name":"TileCache","id":"TileCache1()","children":[{"initializedField":{"refId":"dartkart.layer/TileCache/capacity","name":"capacity"},"isNamed":true,"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"DEFAULT_CAPACITY","name":"capacity","id":"capacity","kind":"param"}],"line":"728","kind":"constructor"}],"line":"714","kind":"class"},{"superclass":{"refId":"dartkart.layer/TileLayer","name":"TileLayer"},"comment":"\n`WMSLayer` loads map tiles from a Web Map Server.\n","uri":"file:///home/karl/repositories/dartkart/lib/src/layer/tile_layer.dart","name":"WMSLayer","id":"WMSLayer","children":[{"name":"_initParameters","isPrivate":true,"id":"_initParameters1()","children":[{"ref":{"refId":"dart.core/Map","name":"Map"},"name":"userParameters","id":"userParameters","kind":"param"}],"line":"532","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the layer(s) to be retrieved from the WMS server.\n\n## Possible values\n* [String] - a single layer\n* [List] - a list of layer names\n","name":"layers=","id":"layers=1()","children":[{"name":"value","id":"value","kind":"param"}],"line":"598","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"sets the service URL","name":"serviceUrl=","id":"serviceUrl=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"611","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nBuilds the tile bounding box for tile ([x],[y]) in geographic\ncoordinates.\n","name":"_buildGeographicTileBBox","isPrivate":true,"id":"_buildGeographicTileBBox3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"x","id":"x","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"y","id":"y","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"zoom","id":"zoom","kind":"param"}],"line":"627","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nBuilds the tile bounding box for tile ([x],[y]) in projected\ncoordinates\n","name":"_buildProjectedTileBBox","isPrivate":true,"id":"_buildProjectedTileBBox3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"x","id":"x","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"y","id":"y","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"zoom","id":"zoom","kind":"param"}],"line":"660","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"bindTileToUrl","id":"bindTileToUrl3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"x","id":"x","line":"672","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"y","id":"y","line":"672","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"zoom","id":"zoom","line":"672","kind":"param"}],"line":"671","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"render","id":"render0()","line":"692","kind":"method"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"comment":"the layer(s) to be loaded from the WMS server","name":"layers","id":"layers","line":"589","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"the URL of the WMS server or null, if the server URL\nisn't configured yet","name":"serviceUrl","id":"serviceUrl","line":"620","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_serviceUrl","isPrivate":true,"id":"_serviceUrl","line":"528","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"isFinal":true,"name":"_layers","isPrivate":true,"id":"_layers","line":"529","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"name":"_defaultParameters","isPrivate":true,"id":"_defaultParameters","line":"530","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIndicates whether the bounding box of a WMS `GetMap`request is\nexpressed in geographic or in projected coordinates.\n\n* if false, the bounding box is expressed in geographic coordinates,\n  i.e. in WGS84 aka\n  [EPSG:4326](http://spatialreference.org/ref/epsg/4326/)\n\n* if true, the bounding box is expressed in projected coordinates,\n  that is coordinate reference system configured on the\n  map viewport, see [MapViewport.crs].\n\nDefault value is false.\n","name":"useProjectedCoordinates","id":"useProjectedCoordinates","line":"653","kind":"variable"},{"comment":"\n[serviceUrl] is base URL of the WMS server.\n\n[layers] is either a single layer name or a list of layer\nnames.\n\n[parameters] is a map of WMS request parameters.\n\n[renderer] is one of the renderer values supported by\n[TileLayer].\n\n##Examples\n     var layer1 = new WmsLayer(\n       serviceUrl: \"https://wms.geo.admin.ch?\",\n       layers: \"ch.are.gemeindetypen\"\n     );\n\n     var layer2 = new WmsLayer(\n       serviceUrl: \"https://wms.geo.admin.ch?\",\n       layers: [\"ch.are.gemeindetypen\", \"ch.are.alpenkonvention\"],\n       parameters: {\n         \"FORMAT\": \"image/jpeg\"\n       }\n     );\n","name":"WMSLayer","id":"WMSLayer4()","children":[{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"serviceUrl","id":"serviceUrl","kind":"param"},{"isNamed":true,"isOptional":true,"name":"layers","id":"layers","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","name":"Map"},"isOptional":true,"name":"parameters","id":"parameters","kind":"param"},{"isNamed":true,"isOptional":true,"name":"renderer","id":"renderer","kind":"param"}],"line":"580","kind":"constructor"}],"line":"526","kind":"class"},{"superclass":{"refId":"dartkart.layer/TileLayer","name":"TileLayer"},"comment":"\nA tile layer which renders map tiles provided by the \nOpenStreetMap project.\n","uri":"file:///home/karl/repositories/dartkart/lib/src/layer/tile_layer.dart","name":"OsmTileLayer","id":"OsmTileLayer","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSet the tile sources where tiles are loaded from.\n\nIf more than one tile source is supplied, the layer loads map\ntile in random order from them.\n\n## Possible values for [sources] \n\n* [:null:] which results in an empty list of tile sources\n* a [String] with a tile URL template\n* a [List] of strings, a tile URL template each\n\nA *tile URL template* is a string which can include the following\nmacros:\n\n  * `{z}` -  bound to the current zoom level when a tile is loaded\n  * `{x}` -  bound to the x-coordiate of the tile when a tile is loaded\n  * `{y}` -  bound to the y-coordiate of the tile when a tile is loaded\n","name":"tileSources=","id":"tileSources=1()","children":[{"name":"sources","id":"sources","kind":"param"}],"line":"484","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"bindTileToUrl","id":"bindTileToUrl3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"x","id":"x","line":"509","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"y","id":"y","line":"509","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"zoom","id":"zoom","line":"509","kind":"param"}],"line":"508","kind":"method"},{"ref":{"refId":"dart.core/List","name":"List"},"comment":"the list of tile sources this layer uses","name":"tileSources","id":"tileSources","line":"463","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"selects a random tile source from the list of configured tile sources","name":"_randomTileSource","isPrivate":true,"id":"_randomTileSource","line":"500","kind":"property"},{"ref":{"refId":"dart.core/List","name":"List"},"name":"_tileSources","isPrivate":true,"id":"_tileSources","line":"460","kind":"variable"},{"name":"_random","isPrivate":true,"id":"_random","line":"497","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"_TEMPLATE_BIND_REGEXP","isPrivate":true,"id":"_TEMPLATE_BIND_REGEXP","line":"506","kind":"variable"},{"name":"OsmTileLayer","id":"OsmTileLayer2()","children":[{"isNamed":true,"isOptional":true,"name":"tileSources","id":"tileSources","kind":"param"},{"isNamed":true,"isOptional":true,"defaultValue":"CANVAS_RENDERER","name":"renderer","id":"renderer","kind":"param"}],"line":"454","kind":"constructor"}],"line":"452","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dartkart.layer/Layer","name":"Layer"},"comment":"\nThe abstract base class for map layers consisting of a grid of\nmap tiles.\n","uri":"file:///home/karl/repositories/dartkart/lib/src/layer/tile_layer.dart","name":"TileLayer","id":"TileLayer","children":[{"comment":"\ninitializes the layer renderer from [renderer]\n\n[renderer] is either a [Renderer] or one of the constants\n[IMG_GRID_RENDERER] or [CANVAS_RENDERER]\n","name":"_initRenderer","isPrivate":true,"id":"_initRenderer1()","children":[{"name":"renderer","id":"renderer","kind":"param"}],"line":"379","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"attach","id":"attach1()","children":[{"ref":{"refId":"dartkart.map/MapViewport","name":"MapViewport"},"name":"m","id":"m","line":"425","kind":"param"}],"line":"424","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"returns a tile URL for the tile at tile coordinates [x], [y]\nin the tile plane at zoom level [zoom]","name":"bindTileToUrl","id":"bindTileToUrl3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"x","id":"x","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"y","id":"y","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"zoom","id":"zoom","kind":"param"}],"line":"439","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"render","id":"render0()","line":"441","kind":"method"},{"ref":{"refId":"dartkart.geometry/Dimension","name":"Dimension"},"comment":"the tile size used by this tile layer","name":"tileSize","id":"tileSize","line":"422","kind":"property"},{"ref":{"refId":"dartkart.geometry/Dimension","name":"Dimension"},"isFinal":true,"isStatic":true,"comment":"the default tile dimensions","name":"DEFAULT_TILE_SIZE","id":"DEFAULT_TILE_SIZE","line":"368","kind":"variable"},{"ref":{"refId":"dartkart.layer/TileCache","name":"TileCache"},"isFinal":true,"name":"_cache","isPrivate":true,"id":"_cache","line":"370","kind":"variable"},{"ref":{"refId":"dartkart.layer/Renderer","name":"Renderer"},"name":"_renderer","isPrivate":true,"id":"_renderer","line":"371","kind":"variable"},{"comment":"\nCreates the tile renderer.\n\n### Possible values for [renderer]\n\n* [IMG_GRID_RENDERER] or [CANVAS_RENDERER]\n* an instance of a [Renderer]\n* the default value if missing or null is [CANVAS_RENDERER]\n","name":"TileLayer","id":"TileLayer1()","children":[{"isNamed":true,"isOptional":true,"defaultValue":"CANVAS_RENDERER","name":"renderer","id":"renderer","kind":"param"}],"line":"413","kind":"constructor"}],"line":"365","kind":"class"},{"superclass":{"refId":"dartkart.layer/Renderer","name":"Renderer"},"comment":"\nA renderer which renders map tiles on a [Canvas] element.\n","uri":"file:///home/karl/repositories/dartkart/lib/src/layer/tile_layer.dart","name":"CanvasRenderer","id":"CanvasRenderer","children":[{"name":"_clear","isPrivate":true,"id":"_clear0()","line":"289","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"beforeRender","id":"beforeRender0()","line":"300","kind":"method"},{"name":"_updateSize","isPrivate":true,"id":"_updateSize0()","line":"321","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"renderTile","id":"renderTile1()","children":[{"ref":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"name":"tileCoord","id":"tileCoord","line":"333","kind":"param"}],"line":"332","kind":"method"},{"ref":{"refId":"dart.dom.html/CanvasRenderingContext2D","name":"CanvasRenderingContext2D"},"name":"_context","isPrivate":true,"id":"_context","line":"280","kind":"property"},{"ref":{"refId":"dart.dom.html/CanvasElement","name":"CanvasElement"},"name":"_canvas","isPrivate":true,"id":"_canvas","line":"279","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dartkart.layer/Tile","name":"Tile"}],"name":"List"},"name":"_tiles","isPrivate":true,"id":"_tiles","line":"285","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"renderTileBorders","id":"renderTileBorders","line":"340","kind":"variable"},{"name":"CanvasRenderer","id":"CanvasRenderer1()","children":[{"ref":{"refId":"dartkart.layer/TileLayer","name":"TileLayer"},"name":"layer","id":"layer","kind":"param"}],"line":"287","kind":"constructor"}],"line":"277","kind":"class"},{"superclass":{"refId":"dartkart.layer/Renderer","name":"Renderer"},"comment":"\nA renderer which renders map tiles with a grid of [ImgElements]s.\n","uri":"file:///home/karl/repositories/dartkart/lib/src/layer/tile_layer.dart","name":"ImgGridRenderer","id":"ImgGridRenderer","children":[{"returnType":{"refId":"void","name":"void"},"name":"beforeRender","id":"beforeRender0()","line":"253","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"renderTile","id":"renderTile1()","children":[{"ref":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"name":"tile","id":"tile","kind":"param"}],"line":"257","kind":"method"},{"name":"ImgGridRenderer","id":"ImgGridRenderer1()","children":[{"name":"layer","id":"layer","kind":"param"}],"line":"251","kind":"constructor"}],"line":"250","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nTile represents a map tile. \n","uri":"file:///home/karl/repositories/dartkart/lib/src/layer/tile_layer.dart","name":"Tile","id":"Tile","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nDetach the tile from the map viewport.\n\nA detached tile whose image becomes available isn't\nrendered anymore.\n","name":"detach","id":"detach0()","line":"133","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nTrigger loading of the tile image.\n","name":"load","id":"load0()","line":"138","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_renderReady","isPrivate":true,"id":"_renderReady0()","line":"162","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_renderLoading","isPrivate":true,"id":"_renderLoading0()","line":"186","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_renderError","isPrivate":true,"id":"_renderError0()","line":"210","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"renders the tile","name":"render","id":"render0()","line":"237","kind":"method"},{"ref":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"comment":"the top left corner in viewport coordinates where the tile\nshould be rendered","name":"_topLeftInViewport","isPrivate":true,"id":"_topLeftInViewport","line":"156","kind":"property"},{"ref":{"refId":"dart.dom.html/ImageElement","name":"ImageElement"},"comment":"Returns the image of the parent tile of this tile, provided \nthere is a parent tile and its image is already in the cache.\nOtherwise returns [:null:].","name":"_parentImage","isPrivate":true,"id":"_parentImage","line":"175","kind":"property"},{"isStatic":true,"comment":"indicates that the tile is loading the tile image","name":"LOADING","id":"LOADING","line":"105","kind":"variable"},{"isStatic":true,"comment":"indicates that the tile image is ready for rendering","name":"READY","id":"READY","line":"107","kind":"variable"},{"isStatic":true,"comment":"indicates that an error occured when loading the tile image","name":"ERROR","id":"ERROR","line":"109","kind":"variable"},{"ref":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"isFinal":true,"comment":"the tile coordinats","name":"tc","id":"tc","line":"112","kind":"variable"},{"ref":{"refId":"dartkart.layer/TileLayer","name":"TileLayer"},"isFinal":true,"comment":"the layer this tile is rendered on ","name":"layer","id":"layer","line":"114","kind":"variable"},{"ref":{"refId":"dart.dom.html/CanvasElement","name":"CanvasElement"},"name":"_canvas","isPrivate":true,"id":"_canvas","line":"116","kind":"variable"},{"ref":{"refId":"dart.dom.html/ImageElement","name":"ImageElement"},"name":"_img","isPrivate":true,"id":"_img","line":"117","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_state","isPrivate":true,"id":"_state","line":"118","kind":"variable"},{"comment":"\nCreates a tile at tile coordinates [tc] = (ti, tj)\nfor the layer [layer]. It will be rendered on\n[_canvas].\n","name":"Tile","id":"Tile3()","children":[{"initializedField":{"refId":"dartkart.layer/Tile/tc","name":"tc"},"ref":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"name":"tc","id":"tc","kind":"param"},{"initializedField":{"refId":"dartkart.layer/Tile/_canvas","name":"_canvas"},"ref":{"refId":"dart.dom.html/CanvasElement","name":"CanvasElement"},"name":"_canvas","isPrivate":true,"id":"_canvas","kind":"param"},{"initializedField":{"refId":"dartkart.layer/Tile/layer","name":"layer"},"ref":{"refId":"dartkart.layer/TileLayer","name":"TileLayer"},"name":"layer","id":"layer","kind":"param"}],"line":"125","kind":"constructor"}],"line":"103","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn abstract strategy class for rendering a grid of image tiles\ncovering the map viewport.\n","uri":"file:///home/karl/repositories/dartkart/lib/src/layer/tile_layer.dart","name":"Renderer","id":"Renderer","children":[{"returnType":{"refId":"void","name":"void"},"comment":"Invoked by a [TileLayer] to render itself","name":"render","id":"render0()","line":"15","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInvoked before the tile grid is rendered using [renderTileGrid].\nDefault implementation is empty. Override in subclasses if\nnecessary.\n","name":"beforeRender","id":"beforeRender0()","line":"26","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRenders the tile grid\n","name":"renderTileGrid","id":"renderTileGrid0()","line":"31","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInvoked after the tile grid is rendered using [renderTileGrid].\nDefault implementation is empty. Override in subclasses if\nnecessary.\n","name":"afterRender","id":"afterRender0()","line":"91","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRenders the tile at position [tileCoord] in the current\ntile plane.\n","name":"renderTile","id":"renderTile1()","children":[{"ref":{"refId":"dartkart.geometry/Point2D","name":"Point2D"},"name":"tileCoord","id":"tileCoord","kind":"param"}],"line":"97","kind":"method"},{"ref":{"refId":"dartkart.layer/TileLayer","name":"TileLayer"},"name":"_layer","isPrivate":true,"id":"_layer","line":"9","kind":"variable"},{"comment":"Creates a renderer for a tile [_layer]","name":"Renderer","id":"Renderer1()","children":[{"initializedField":{"refId":"dartkart.layer/Renderer/_layer","name":"_layer"},"ref":{"refId":"dartkart.layer/TileLayer","name":"TileLayer"},"name":"_layer","isPrivate":true,"id":"_layer","kind":"param"}],"line":"12","kind":"constructor"}],"line":"7","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dartkart.layer/Object_PropertyObservable","name":"Object_PropertyObservable"},"comment":"\nThis is the abstract base class for a layer in `dartkart.\n\n## DOM elements\n* the layer has a `div` as root element, see [container]\n  with the CSS class `dartkart-layer` and a unique `id`.\n\n","uri":"file:///home/karl/repositories/dartkart/lib/src/layer/base.dart","name":"Layer","id":"Layer","children":[{"name":"_defaultDOMId","isPrivate":true,"id":"_defaultDOMId0()","line":"20","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSets the DOM  id on the layer [container].\n\nIf [value] is null or empty, sets a default id.\n","name":"domId=","id":"domId=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"51","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAttaches the layer to a map viewport [m].\n\nThrows [StateError] if this layer is already attached.\n","name":"attach","id":"attach1()","children":[{"ref":{"refId":"dartkart.map/MapViewport","name":"MapViewport"},"name":"m","id":"m","kind":"param"}],"line":"67","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nDetaches this layer from the map viewport it is\ncurrently attached to.\n","name":"detach","id":"detach0()","line":"78","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"renders the layer","name":"render","id":"render0()","line":"86","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"set the opacity of this layer. [value] is a [num] in the range\n(0.0 - 1.0). The lower the value, the more transparent the layer.","name":"opacity=","id":"opacity=1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"value","id":"value","kind":"param"}],"line":"96","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"sets the layer name. If [value] is null or consists of white space only,\na default name is chosen.","name":"name=","id":"name=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"120","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"sets whether this layer is visible or not","name":"visible=","id":"visible=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"value","id":"value","kind":"param"}],"line":"138","kind":"method"},{"isStatic":true,"name":"_nextLayerId","isPrivate":true,"id":"_nextLayerId","line":"14","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_defaultName","isPrivate":true,"id":"_defaultName","line":"21","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"the unique numeric id for this layer","name":"id","id":"id","line":"41","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"the unique layer id","name":"domId","id":"domId","line":"44","kind":"property"},{"ref":{"refId":"dartkart.map/MapViewport","name":"MapViewport"},"comment":"the map this layer is attached to, or [:null:]","name":"map","id":"map","line":"60","kind":"property"},{"ref":{"refId":"dart.dom.html/DivElement","name":"DivElement"},"name":"container","id":"container","line":"83","kind":"property"},{"ref":{"refId":"dart.core/double","name":"double"},"comment":"the opacity of this layer","name":"opacity","id":"opacity","line":"92","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"the layer name","name":"name","id":"name","line":"113","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"the layer visibility","name":"visible","id":"visible","line":"135","kind":"property"},{"isStatic":true,"name":"_layerIDCounter","isPrivate":true,"id":"_layerIDCounter","line":"13","kind":"variable"},{"ref":{"refId":"dartkart.map/MapViewport","name":"MapViewport"},"name":"_map","isPrivate":true,"id":"_map","line":"16","kind":"variable"},{"ref":{"refId":"dart.dom.html/DivElement","name":"DivElement"},"name":"_container","isPrivate":true,"id":"_container","line":"17","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_nid","isPrivate":true,"id":"_nid","line":"18","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"_opacity","isPrivate":true,"id":"_opacity","line":"89","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_name","isPrivate":true,"id":"_name","line":"110","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_visible","isPrivate":true,"id":"_visible","line":"132","kind":"variable"},{"comment":"\nCreates a new layer.\n\nIf present, [domId] is assigned to the `id` attribute of the layer\n[container]. Otherwise, a new unique id is created.\n","name":"Layer","id":"Layer1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"domId","id":"domId","kind":"param"}],"line":"29","kind":"constructor"}],"line":"11","kind":"class"}],"line":"6","kind":"library"}